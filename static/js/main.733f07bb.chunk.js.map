{"version":3,"sources":["services/api.js","pages/Login/index.js","variables/charts/statusChart.js","variables/charts/healthLevelChart.js","components/NavBar/index.js","components/AssetCard/index.js","components/Modals/AssetModal/index.js","pages/Main/index.js","components/Modals/AdminAskEdit.js","components/Modals/AdminNewData.js","components/Modals/AdminEdit.js","components/Modals/AdminPass.js","pages/Admin/index.js","pages/NotFound/index.js","routes.js","index.js"],"names":["api","axios","create","baseURL","process","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","Login","navigate","useNavigate","useState","loginID","setloginID","error","setError","e","a","preventDefault","post","data","company","setItem","JSON","stringify","useEffect","get","status","Container","className","Card","Body","Title","Form","onSubmit","Group","Control","type","placeholder","onChange","target","value","Alert","variant","Button","statusChart","chart","options3d","enabled","alpha","plotOptions","pie","innerSize","depth","responsive","rules","condition","maxWidth","chartOptions","legend","title","text","series","NavBar","states","finally","clear","Navbar","collapseOnSelect","expand","bg","fluid","to","Brand","Toggle","Collapse","id","Nav","Text","companyName","NavDropdown","unitView","name","onSelect","eventKey","setUnitView","units","Item","map","i","Link","onClick","AssetCard","index","handleDelete","handleModify","Img","src","image","Badge","pill","parseStatus","toUpperCase","model","owner","description","healthLevel","readOnly","ModifyAssetModal","showModal","setShowModal","assetData","setData","setAssetData","setAssets","setName","setOwner","setModel","setStatus","setDescription","setHealthLevel","setImage","handleCloseModal","item","form","FormData","newData","append","_id","put","assets","Modal","show","onHide","Header","closeButton","Label","required","Select","as","min","max","files","Footer","Main","highcharts3d","Highcharts","setUnits","parse","window","confirm","delete","getData","companyID","Tabs","defaultActiveKey","Tab","Row","Col","md","highcharts","options","healthLevelChart","length","AssetModal","AdminAskEdit","askEditModal","clearStates","actionTarget","askPassword","setEditionModal","refreshData","deleteItem","path","AdminNewData","newDataModal","setCompany","locationData","setLocationData","newItem","console","log","err","AdminEdit","editionModal","updateItem","AdminPass","password","setPassword","action","fn","params","pwModal","x","document","getElementById","validatePassword","Admin","setPWModal","setAskEditModal","setNewDataModal","showPanel","setShowPanel","tabKey","setTabKey","setAction","setActionTarget","users","setUsers","companies","setCompanies","info","activeKey","k","Table","striped","hover","evt","closest","querySelector","innerHTML","App","auth","setAuth","PrivateRoute","children","location","useLocation","state","from","basename","element","NotFound","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.733f07bb.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport \"dotenv/config\";\r\n\r\n// define api url\r\nconst api = axios.create({\r\n    baseURL: process.env.REACT_APP_API_URL\r\n});\r\n\r\n// intercepts requests and set headers basaed on localstorage\r\napi.interceptors.request.use(config => {\r\n    const token = localStorage.getItem(\"token\")\r\n    if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n});\r\n\r\nexport default api;","// libraries\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n//helpers and services\r\nimport api from \"../../services/api.js\"\r\n\r\n//styles\r\nimport { Container, Card, Form, Button, Alert } from 'react-bootstrap'\r\nimport \"./styles.css\"\r\n\r\nfunction Login() {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [loginID, setloginID] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const { status } = await api.get(\"/me\");\r\n            if (status === 200) navigate(\"/\");\r\n        })();\r\n    }, [navigate])\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const {\r\n                data: {\r\n                    token,\r\n                    company\r\n                }\r\n            } = await api.post(\"/login\", { loginID });\r\n\r\n            localStorage.setItem(\"company\", JSON.stringify(company))\r\n            localStorage.setItem(\"token\", token)\r\n\r\n            navigate(\"/\")\r\n        }\r\n        catch (err) {\r\n            setError(\"Login failed\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container className=\"container-login\">\r\n            <Card className=\"login-form\">\r\n                <Card.Body>\r\n                    <Card.Title className=\"fs-4 text-center\">\r\n                        Wellcome to <br />\r\n                        Assets Manager</Card.Title>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Control type=\"text\" placeholder=\"Login ID\"\r\n                                onChange={e => setloginID(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        {error && <Alert variant=\"danger\" className=\"error\">{error}</Alert>}\r\n                        <Button variant=\"primary\" type=\"submit\" className=\"login-form-btn\">\r\n                            Enter\r\n                        </Button>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card >\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Login;","const statusChart = {\r\n    chart: {\r\n        type: 'pie',\r\n        options3d: {\r\n            enabled: true,\r\n            alpha: 45\r\n        }\r\n    },\r\n    plotOptions: {\r\n        pie: {\r\n            innerSize: 100,\r\n            depth: 45\r\n        }\r\n    },\r\n    responsive: {\r\n        rules: [{\r\n            condition: {\r\n                maxWidth: 500\r\n            },\r\n            chartOptions: {\r\n                legend: {\r\n                    enabled: false\r\n                }\r\n            }\r\n        }]\r\n    },\r\n    title: {\r\n        text: 'Assets Status'\r\n    },\r\n    series: [{\r\n        data: [1, 2, 3]\r\n    }]\r\n}\r\n\r\nexport default statusChart;\r\n","const statusChart = {\r\n    chart: {\r\n        type: 'pie',\r\n        options3d: {\r\n            enabled: true,\r\n            alpha: 45\r\n        }\r\n    },\r\n    plotOptions: {\r\n        pie: {\r\n            innerSize: 100,\r\n            depth: 45\r\n        }\r\n    },\r\n    responsive: {\r\n        rules: [{\r\n            condition: {\r\n                maxWidth: 500\r\n            },\r\n            chartOptions: {\r\n                legend: {\r\n                    enabled: false\r\n                }\r\n            }\r\n        }]\r\n    },\r\n    title: {\r\n        text: 'Health Level'\r\n    },\r\n    series: [{\r\n        data: [1, 2, 3]\r\n    }]\r\n}\r\n\r\nexport default statusChart;\r\n","// libraries\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport { Navbar, Container, Nav, NavDropdown } from 'react-bootstrap'\r\n\r\n// helpers and services\r\nimport api from \"../../services/api\"\r\n\r\n// styles\r\nimport \"./styles.css\"\r\n\r\nfunction NavBar({ states }) {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    async function handleExit() {\r\n\r\n        await api.get(\"/logout\").finally(() => {\r\n            localStorage.clear();\r\n            navigate(\"/login\");\r\n        })\r\n    }\r\n\r\n    return (\r\n        // render navbar with unit and company and change data displayed into the main component\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n            <Container className=\"nav-bar\" fluid>\r\n                <Link to=\"/\" className=\"brand-link\"><Navbar.Brand>Assets Manager</Navbar.Brand></Link>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav>\r\n                        <Navbar.Text className=\"me-3 company-name\">{`${states.companyName}`}</Navbar.Text>\r\n                    </Nav>\r\n                    <Nav className=\"navbar-unit\">\r\n                        <Navbar.Text className=\"me-1 \">Unit(s):</Navbar.Text>\r\n                        <NavDropdown className=\"p-0\" title={states.unitView.name || \"All\"} id=\"collasible-nav-dropdown\"\r\n                            onSelect={eventKey =>\r\n                                eventKey === \"all\" ? states.setUnitView(\"all\") : states.setUnitView(states.units[eventKey]\r\n                                )}>\r\n                            <NavDropdown.Item eventKey={\"all\"}>ALL</NavDropdown.Item>\r\n                            {states.units.map((e, i) => (\r\n                                <NavDropdown.Item className=\"unit-name\" key={i} eventKey={i}>{e.name}</NavDropdown.Item>\r\n                            ))}\r\n                        </NavDropdown>\r\n                    </Nav>\r\n                    <Nav className=\"ms-auto\">\r\n                        <Nav.Link onClick={handleExit}>Exit</Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default NavBar;","// libraries\r\nimport \"dotenv/config\";\r\nimport { Card, Badge, Container, Button } from 'react-bootstrap'\r\n\r\n// style\r\nimport \"./styles.css\"\r\n\r\nfunction AssetCard({ states: {\r\n    data,\r\n    index,\r\n    handleDelete,\r\n    handleModify\r\n} }) {\r\n\r\n    function parseStatus(status) {\r\n\r\n        switch (status) {\r\n            case \"running\":\r\n                return \"success\";\r\n\r\n            case \"alerting\":\r\n                return \"warning\";\r\n\r\n            case \"stopped\":\r\n                return \"danger\";\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        // render new asset based on given asset list\r\n        <Container>\r\n            <Card className=\"asset-card\">\r\n                <Card.Img className=\"card-img\" variant=\"top\" src={`${process.env.REACT_APP_IMG_URL}/${data.image}`} />\r\n                <Card.Body>\r\n                    <Card.Title className=\"fs-4 text-center card-title\">{data.name}\r\n                        <Badge pill bg={parseStatus(data.status)}\r\n                            text=\"dark\"\r\n                            className=\"asset-card-subtitle\">\r\n                            {data.status.toUpperCase()}\r\n                        </Badge>\r\n                    </Card.Title>\r\n                    <Card.Text>\r\n                        <span className=\"fw-bold\">Model:</span>\r\n                        {` ${data.model}`}\r\n                    </Card.Text>\r\n                    <Card.Text>\r\n                        <span className=\"fw-bold\">Owner:</span>\r\n                        {` ${data.owner}`}\r\n                    </Card.Text>\r\n                    <Card.Text>\r\n                        <span className=\"fw-bold\">Description:</span>\r\n                        {` ${data.description}`}\r\n                    </Card.Text>\r\n                    <Card.Text>\r\n                        <span className=\"fw-bold\">Health level:</span>\r\n                        <input type=\"range\" className=\"fw-bold slider\"\r\n                            value={data.healthLevel} readOnly />\r\n                    </Card.Text>\r\n                    <div className=\"d-flex justify-content-evenly\">\r\n                        <Button variant=\"primary\" onClick={() => handleModify(index)}>Modify</Button>\r\n                        <Button variant=\"danger\" onClick={() => handleDelete(index)}>Delete</Button>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card >\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AssetCard;","import { useState, useEffect } from 'react';\r\nimport { Modal, Button, Form, Alert } from 'react-bootstrap'\r\n\r\nimport \"./styles.css\"\r\n\r\n// services\r\nimport api from \"../../../services/api\"\r\n\r\nfunction ModifyAssetModal({ states: {\r\n    showModal,\r\n    setShowModal,\r\n    assetData: data,\r\n    setAssetData: setData,\r\n    setAssets,\r\n    unitView } }) {\r\n\r\n    const [error, setError] = useState(\"\");\r\n\r\n    // form states\r\n    const [name, setName] = useState(\"\");\r\n    const [owner, setOwner] = useState(\"\");\r\n    const [model, setModel] = useState(\"\");\r\n    const [status, setStatus] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [healthLevel, setHealthLevel] = useState(0);\r\n    const [image, setImage] = useState({});\r\n\r\n    // set data on modal based on data set when the modal was prompted\r\n    useEffect(() => {\r\n        setName(data.name || \"\");\r\n        setOwner(data.owner || \"\");\r\n        setModel(data.model || \"\");\r\n        setStatus(data.status || \"\");\r\n        setDescription(data.description || \"\");\r\n        setHealthLevel(data.healthLevel || 0);\r\n    }, [data])\r\n\r\n    // close modal and clean states\r\n    async function handleCloseModal(e) {\r\n        setError(\"\");\r\n        setData({});\r\n        setImage({});\r\n        setShowModal(false);\r\n    }\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const form = new FormData()\r\n\r\n        // data collected from form\r\n        const newData = {\r\n            name,\r\n            owner,\r\n            model,\r\n            status,\r\n            description,\r\n            healthLevel,\r\n        }\r\n\r\n        // grants that only new data is sent to the endpoint\r\n        for (let item in newData) {\r\n\r\n            if (newData[item] !== data[item]) {\r\n                form.append(item, newData[item])\r\n            }\r\n        }\r\n\r\n        // grants that only if an image is selected, it will be sent to the endpoint\r\n        if (!!image.name) form.append(\"image\", image);\r\n\r\n        try {\r\n\r\n            //if asset has an id, update otherwise, create new asset\r\n            if (data._id) {\r\n                await api.put(`/assets/${data._id}`, form);\r\n            } else {\r\n                await api.post(`/units/${unitView._id}`, form);\r\n            }\r\n\r\n            //reload assets\r\n            const { data: assets } = await api.get(`/units/${unitView._id}/assets`);\r\n            setAssets(assets);\r\n            setError(\"\");\r\n            setData({});\r\n            setImage({});\r\n            setShowModal(false);\r\n        }\r\n        catch (err) {\r\n            setError(\"Unable to save changes to the asset\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        // prompt user with a form with asset data to be updated or created\r\n        <Modal show={showModal} onHide={handleCloseModal}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>{data ? \"Modify asset\" : \"New asset\"}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form onSubmit={handleSubmit} id=\"asset\">\r\n                    <Form.Group className=\"d-flex justify-content-evenly align-items-center mb-2\">\r\n                        <Form.Label className=\"w-25 fw-bold\">Name</Form.Label>\r\n                        <Form.Control required={!data} className=\"w-50\" type=\"text\" value={name}\r\n                            onChange={e => setName(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"d-flex justify-content-evenly align-items-center mb-2\">\r\n                        <Form.Label className=\"w-25 fw-bold\">Owner</Form.Label>\r\n                        <Form.Control required={!data} className=\"w-50\" type=\"text\" value={owner}\r\n                            onChange={e => setOwner(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"d-flex justify-content-evenly align-items-center mb-2\">\r\n                        <Form.Label className=\"w-25 fw-bold\">Model</Form.Label>\r\n                        <Form.Control required={!data} className=\"w-50\" type=\"text\" value={model}\r\n                            onChange={e => setModel(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"d-flex justify-content-evenly align-items-center mb-2\">\r\n                        <Form.Label className=\"w-25 fw-bold\">Status</Form.Label>\r\n                        <Form.Select required={!data} className=\"w-50\" type=\"text\" value={status}\r\n                            onChange={e => setStatus(e.target.value)}\r\n                        >\r\n                            {[\"\", \"running\", \"alerting\", \"stopped\"].map((e, i) => <option key={i} value={e}>{e}</option>)}\r\n                        </Form.Select>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"d-flex justify-content-evenly align-items-center mb-2\">\r\n                        <Form.Label className=\"w-25 fw-bold\">Description</Form.Label>\r\n                        <Form.Control required={!data} className=\"w-50\" as=\"textarea\" value={description}\r\n                            onChange={e => setDescription(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"d-flex justify-content-evenly align-items-center mb-2\">\r\n                        <Form.Label className=\"w-25 fw-bold\">Health level</Form.Label>\r\n                        <div className=\"w-50 hl-container\">\r\n                            <Form.Control required={!data} type=\"number\" min=\"0\" max=\"100\" className=\"hl-number-input\" value={healthLevel}\r\n                                onChange={e => setHealthLevel(e.target.value)}\r\n                            />\r\n                            <input type=\"range\"\r\n                                className=\"fw-bold slider slider-editable\"\r\n                                min=\"0\"\r\n                                max=\"100\"\r\n                                value={healthLevel}\r\n                                onChange={e => setHealthLevel(e.target.value)} />\r\n                        </div>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"d-flex justify-content-evenly align-items-center mb-2\">\r\n                        <Form.Label className=\"w-25 fw-bold\">Image</Form.Label>\r\n                        <Form.Control required={!data} className=\"w-50\" type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\r\n                    </Form.Group>\r\n                </Form>\r\n                {error && <Alert variant=\"danger\" className=\"error\">{error}</Alert>}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleCloseModal}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"primary\" type=\"submit\" form=\"asset\">\r\n                    {data ? \"Save Changes\" : \"Create asset\"}\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default ModifyAssetModal;","// libraries\r\nimport { useState, useEffect } from \"react\";\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from 'highcharts-react-official'\r\nimport highcharts3d from 'highcharts/highcharts-3d'\r\nimport {\r\n    Container,\r\n    Col,\r\n    Row,\r\n    Tab,\r\n    Tabs,\r\n    Button,\r\n    Alert\r\n} from 'react-bootstrap'\r\n\r\n// services and helpers\r\nimport api from \"../../services/api.js\"\r\n\r\n// variables\r\nimport statusChart from \"../../variables/charts/statusChart\"\r\nimport healthLevelChart from \"../../variables/charts/healthLevelChart\"\r\n\r\n// components\r\nimport NavBar from \"../../components/NavBar\"\r\nimport AssetCard from \"../../components/AssetCard\"\r\nimport AssetModal from \"../../components/Modals/AssetModal\"\r\n\r\n// styles\r\nimport \"./styles.css\"\r\nimport \"./charts.css\"\r\n\r\nfunction Main() {\r\n\r\n    highcharts3d(Highcharts);\r\n\r\n    const [units, setUnits] = useState([])\r\n    const [unitView, setUnitView] = useState(\"all\")\r\n    const [assets, setAssets] = useState([])\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [assetData, setAssetData] = useState({});\r\n    const company = JSON.parse(localStorage.getItem(\"company\"))\r\n\r\n    // fetch units data from the api\r\n    useEffect(() => {\r\n        async function getData() {\r\n            if (company._id) {\r\n                const { data: { units } } = await api.get(`/companies/${company._id}`);\r\n                setUnits(units);\r\n            }\r\n        }\r\n\r\n        getData();\r\n\r\n    }, [company._id])\r\n\r\n    // fetch assets data from the api\r\n    useEffect(() => {\r\n        async function getData() {\r\n            if (unitView === \"all\" && company._id) {\r\n                const { data: assets } = await api.get(`/${company._id}/all-assets`);\r\n                setAssets(assets);\r\n            } else if (unitView._id) {\r\n                const { data: assets } = await api.get(`/units/${unitView._id}/assets`);\r\n                setAssets(assets);\r\n            }\r\n        }\r\n\r\n        getData();\r\n\r\n    }, [unitView, company._id])\r\n\r\n    async function handleDelete(index) {\r\n        const deletion = window.confirm(\"Você tem certeza sobre deletar essa despesa? A ação não poderá ser desfeita\");\r\n        if (deletion) {\r\n            await api.delete(`/assets/${assets[index]._id}`)\r\n            const { data } = await api.get(`/units/${unitView._id}/assets`);\r\n            setAssets(data);\r\n        }\r\n    }\r\n\r\n    async function handleModify(index) {\r\n        setShowModal(true);\r\n        setAssetData(assets[index])\r\n\r\n    }\r\n\r\n    function handleNewAsset() {\r\n        setShowModal(true);\r\n        setAssetData(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* share states between navbar and main page */}\r\n            <NavBar states={{\r\n                companyName: company.name,\r\n                companyID: company._id,\r\n                unitView,\r\n                setUnitView,\r\n                units\r\n            }} />\r\n            <h1 className=\"display-1 text-center\">{unitView === \"all\" ? \"ALL\" : unitView.name.toUpperCase()}</h1>\r\n            <Container>\r\n                <Tabs defaultActiveKey=\"sumary\">\r\n                    <Tab eventKey=\"sumary\" title=\"Sumary\">\r\n                        <Alert variant=\"danger\" className=\"error\">Feature under development: This charts don't represent actual data!</Alert>\r\n                        <Container>\r\n                            <Row className=\"justify-content-md-center\">\r\n                                <Col md=\"auto\">\r\n                                    <HighchartsReact\r\n                                        highcharts={Highcharts}\r\n                                        options={healthLevelChart}\r\n                                    />\r\n                                </Col>\r\n                                <Col md=\"auto\">\r\n                                    <HighchartsReact\r\n                                        highcharts={Highcharts}\r\n                                        options={statusChart}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Tab>\r\n                    <Tab eventKey=\"assets\" title=\"Assets\" >\r\n                        {/* show button to add new asset only when user is on a a unit tab */}\r\n                        {unitView !== \"all\" && <Button className=\"add-new-asset-btn\" onClick={handleNewAsset}>Add new asset</Button>}\r\n                        <Container className=\"cards-container\">\r\n                            {/* programmatically loads cards with asssets */}\r\n                            {assets.length > 0 ? assets.map((e, i) => (\r\n                                <AssetCard states={{ data: e, index: i, handleDelete, handleModify }} key={`card-${i}`} />\r\n                            )) :\r\n                                \"Network failure or there are no assets available for this unit\"\r\n                            }\r\n                        </Container>\r\n                    </Tab>\r\n                </Tabs>\r\n            </Container>\r\n            <AssetModal\r\n                states={{\r\n                    showModal,\r\n                    setShowModal,\r\n                    assetData,\r\n                    setAssetData,\r\n                    setAssets,\r\n                    unitView\r\n                }} />\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Main;","// librarires\r\nimport {\r\n    Button,\r\n    Modal\r\n} from 'react-bootstrap'\r\n\r\n// services and helpers\r\nimport api from \"../../services/api.js\"\r\n\r\n// prompt user if they want to edit or delete given data\r\nfunction AdminAskEdit({ states: {\r\n    askEditModal,\r\n    clearStates,\r\n    actionTarget,\r\n    askPassword,\r\n    setEditionModal,\r\n    refreshData\r\n} }) {\r\n    // delete item if requested\r\n    async function deleteItem(path, id) {\r\n        await api.delete(`/${path}/${id}`);\r\n        refreshData(path);\r\n    }\r\n\r\n    return (\r\n        <Modal show={askEditModal}>\r\n            <Modal.Header>\r\n                <Modal.Title>ACTION</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={clearStates}>\r\n                    Cancel\r\n                </Button>\r\n                <Button variant=\"danger\" onClick={() => askPassword(deleteItem, actionTarget)}>\r\n                    Delete\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={() => setEditionModal(true)}>\r\n                    Edit\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AdminAskEdit;","// librarires\r\nimport { useState, useEffect } from \"react\"\r\nimport {\r\n    Button,\r\n    Modal,\r\n    Form,\r\n    Alert\r\n} from 'react-bootstrap'\r\n\r\n// services and helpers\r\nimport api from \"../../services/api.js\"\r\n\r\n//prompt user for new data for given field\r\nfunction AdminNewData({ states: {\r\n    newDataModal,\r\n    actionTarget,\r\n    clearStates,\r\n    askPassword,\r\n    refreshData\r\n} }) {\r\n\r\n    const [error, setError] = useState(\"\");\r\n\r\n    // form data\r\n    const [name, setName] = useState(\"\")\r\n    const [company, setCompany] = useState(\"\")\r\n    const [locationData, setLocationData] = useState(\"\")\r\n\r\n    // load new information about where the data will be placed only if the action target has changed\r\n    useEffect(() => {\r\n        if (actionTarget[0] === \"new-user\" ||\r\n            actionTarget[0] === \"new-unit\") {\r\n            (async () => {\r\n                const { data } = await api.get(\"/companies\");\r\n                console.log(data)\r\n                setLocationData(data);\r\n            })();\r\n        }\r\n\r\n    }, [actionTarget]);\r\n\r\n\r\n    // create item into db\r\n    async function newItem(path, data) {\r\n        await api.post(`/${path}`, data)\r\n\r\n        switch (path) {\r\n            case \"new-user\":\r\n                path = \"users\"\r\n                break;\r\n            case \"new-company\":\r\n                path = \"companies\"\r\n                break;\r\n            case \"new-unit\":\r\n                path = \"units\"\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n        refreshData(path);\r\n\r\n    }\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        try {\r\n            askPassword(newItem, [...actionTarget, { name, company }])\r\n            setName(\"\");\r\n            setCompany(\"\");\r\n            setLocationData(\"\");\r\n        } catch (err) {\r\n            setError(\"Not able to create item\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        // prompt user for new data to be created\r\n        <Modal show={newDataModal} >\r\n            <Modal.Header>\r\n                <Modal.Title>{`${actionTarget.length > 0 && actionTarget[0].toUpperCase()}`}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form onSubmit={handleSubmit} id=\"new-data\">\r\n                    <Form.Group className=\"d-flex justify-content-evenly align-items-center mb-2\">\r\n                        <Form.Label className=\"w-25 fw-bold\">Name</Form.Label>\r\n                        <Form.Control required type=\"text\" value={name} className=\"w-50\"\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    {locationData && <>\r\n                        <Form.Group className=\"d-flex justify-content-evenly align-items-center mb-2\">\r\n                            <Form.Label className=\"w-25 fw-bold\">Company</Form.Label>\r\n                            <Form.Select required className=\"w-50\" type=\"text\" value={company}\r\n                                onChange={e => setCompany(e.target.value)}\r\n                            >\r\n                                <option></option>\r\n                                {locationData.map((e, i) => <option key={i} value={e.name}>{e.name}</option>)}\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n                    </>}\r\n                </Form>\r\n                {error && <Alert variant=\"danger\" className=\"error\">{error}</Alert>}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={() => {\r\n                    clearStates();\r\n                    setName(\"\");\r\n                    setCompany(\"\");\r\n                    setLocationData(\"\");\r\n                }}>\r\n                    Cancel\r\n                </Button>\r\n                <Button variant=\"primary\" type=\"submit\" form=\"new-data\">\r\n                    Save channges\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal >\r\n    )\r\n}\r\n\r\nexport default AdminNewData;","// librarires\r\nimport { useState } from \"react\"\r\nimport {\r\n    Button,\r\n    Modal,\r\n    Form,\r\n    Alert\r\n} from 'react-bootstrap'\r\n\r\n// services and helpers\r\nimport api from \"../../services/api.js\"\r\n\r\n//prompt user for new data for given field\r\nfunction AdminEdit({ states: {\r\n    editionModal,\r\n    actionTarget,\r\n    clearStates,\r\n    askPassword,\r\n    refreshData\r\n} }) {\r\n\r\n    // form data\r\n    const [name, setName] = useState(\"\")\r\n\r\n    //update db\r\n    async function updateItem(path, id, data) {\r\n        await api.put(`/${path}/${id}`, data)\r\n        refreshData(path);\r\n    }\r\n\r\n    return (\r\n        <Modal show={editionModal} >\r\n            <Modal.Header>\r\n                <Modal.Title>{`EDIT ${actionTarget.length > 0 && actionTarget[0].toUpperCase()}`}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form.Label className=\"fw-bold\">Name</Form.Label>\r\n                <Form.Control required type=\"text\" id=\"master-password\" value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                />\r\n                <Alert variant=\"danger\" className=\"error\">Due to major implications, only \"name\" can be updated</Alert>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={clearStates}>\r\n                    Cancel\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={() => askPassword(updateItem, [...actionTarget, { name }])}>\r\n                    Save channges\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal >\r\n    )\r\n}\r\n\r\nexport default AdminEdit;","// librarires\r\nimport { useState } from \"react\"\r\nimport {\r\n    Button,\r\n    Modal,\r\n    Form,\r\n    Alert\r\n} from 'react-bootstrap'\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n// services and helpers\r\nimport api from \"../../services/api.js\"\r\n\r\nfunction AdminPass({ states }) {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    // component states\r\n    const [error, setError] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    // given the correct password, execute stored action, then reset states or prompt error\r\n    // THIS FEATURE IS NOT COMPLETED YET AND THE ROUTES ARE NOT PROTECTED\r\n    async function validatePassword() {\r\n        try {\r\n            await api.post(\"/master\", { password });\r\n            states.action.fn(...states.action.params);\r\n            setPassword(\"\");\r\n            setError(\"\");\r\n            states.clearStates();\r\n        }\r\n        catch (err) {\r\n            setError(\"Unable to authenticate\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal show={states.pwModal}>\r\n            <Modal.Body>\r\n                <Form.Label className=\"fw-bold\">Master Password</Form.Label>\r\n                <Form.Control required type=\"password\" id=\"master-password\" value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <label>\r\n                    <input type=\"checkbox\" value={password}\r\n                        onClick={() => {\r\n                            var x = document.getElementById(\"master-password\");\r\n                            if (x.type === \"password\") {\r\n                                x.type = \"text\";\r\n                            } else {\r\n                                x.type = \"password\";\r\n                            }\r\n                        }}\r\n                    /> Show Password\r\n                </label>\r\n                <Alert variant=\"primary\" className=\"error\">Test PW: tractian-challange</Alert>\r\n                {error && <Alert variant=\"danger\" className=\"error\">{error}</Alert>}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"danger\" onClick={() => {\r\n                    states.clearStates();\r\n                    navigate(\"/\")\r\n                }}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={() => validatePassword()}>\r\n                    OK\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AdminPass;","// libraries\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n    Container,\r\n    Navbar,\r\n    Tab,\r\n    Tabs,\r\n    Button,\r\n    Table\r\n} from 'react-bootstrap'\r\n\r\n// services and helpers\r\nimport api from \"../../services/api.js\"\r\n\r\n// components\r\n\r\nimport AdminAskEdit from \"../../components/Modals/AdminAskEdit\"\r\nimport AdminNewData from \"../../components/Modals/AdminNewData\"\r\nimport AdminEdit from \"../../components/Modals/AdminEdit\"\r\nimport AdminPass from \"../../components/Modals/AdminPass\"\r\n\r\n// styles\r\nimport \"./styles.css\"\r\n\r\nfunction Admin() {\r\n\r\n    // modals and views\r\n    const [pwModal, setPWModal] = useState(false);\r\n    const [askEditModal, setAskEditModal] = useState(false);\r\n    const [editionModal, setEditionModal] = useState(false);\r\n    const [newDataModal, setNewDataModal] = useState(false);\r\n    const [showPanel, setShowPanel] = useState(false);\r\n    const [tabKey, setTabKey] = useState(\"users\");\r\n\r\n    // actions\r\n    const [action, setAction] = useState({});\r\n    const [actionTarget, setActionTarget] = useState([]);\r\n\r\n    // api data\r\n    const [users, setUsers] = useState([]);\r\n    const [companies, setCompanies] = useState([]);\r\n    const [units, setUnits] = useState([]);\r\n\r\n    // show panel when master password is correct\r\n    useEffect(() => {\r\n        (async () => {\r\n            askPassword(setShowPanel, [true]);\r\n            const { data } = await api.get(\"/users\");\r\n            setUsers(data);\r\n        })()\r\n    }, [])\r\n\r\n    // ask for password and update data from api\r\n    useEffect(() => {\r\n\r\n        refreshData(tabKey)\r\n\r\n    }, [tabKey])\r\n\r\n    async function refreshData(info) {\r\n        switch (info) {\r\n            case (\"users\"): {\r\n                const { data } = await api.get(\"/users\");\r\n                setUsers(data);\r\n                break;\r\n            }\r\n            case (\"companies\"): {\r\n                const { data } = await api.get(\"/companies\");\r\n                setCompanies(data);\r\n                break;\r\n            }\r\n            case (\"units\"): {\r\n                const { data } = await api.get(\"/units\");\r\n                setUnits(data);\r\n                break;\r\n            }\r\n            default: {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // handler for asking password\r\n    function askPassword(fn, params) {\r\n        setPWModal(true);\r\n        // define action that will be used after the correct input of the password\r\n        setAction({\r\n            fn,\r\n            params,\r\n        })\r\n    }\r\n\r\n    // clear all action and modal states\r\n    function clearStates() {\r\n        setAction({});\r\n        setActionTarget([]);\r\n        setAskEditModal(false);\r\n        setPWModal(false);\r\n        setEditionModal(false);\r\n        setNewDataModal(false);\r\n    }\r\n\r\n    return (\r\n        <>{showPanel ?\r\n            <>\r\n                {/* navbar with only the name of the aplication, once there will be no other funcionality */}\r\n                <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                    <Container className=\"nav-bar\" fluid>\r\n                        <Navbar.Brand>Assets Manager</Navbar.Brand>\r\n                    </Container>\r\n                </Navbar>\r\n                <Container className=\"mt-5\">\r\n                    <h1 className=\"text-center\"> ADMINISTRATION PANEL</h1>\r\n                    {/* container with tables reggarding each administration task and infos */}\r\n                    <Container className=\"mt-5\">\r\n                        <Tabs activeKey={tabKey} onSelect={(k) => { askPassword(setTabKey, [k]) }}>\r\n                            <Tab eventKey=\"users\" title=\"USERS\">\r\n                                <Container>\r\n                                    <Button className=\"add-new-asset-btn\" onClick={() => {\r\n                                        setActionTarget([\"new-user\"]);\r\n                                        setNewDataModal(true);\r\n                                    }}> new user</Button>\r\n                                    <Table striped hover responsive className=\"mt-2\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Name</th>\r\n                                                <th>Company</th>\r\n                                                <th>Login ID</th>\r\n                                                <th>ID</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {users.length > 0 && users.map((e, i) =>\r\n                                                < tr key={i} onClick={(evt) => {\r\n                                                    const id = evt.target.closest(\"tr\").querySelector(\".id\").innerHTML;\r\n                                                    setActionTarget([\"users\", id]);\r\n                                                    setAskEditModal(setNewDataModal);\r\n                                                }}>\r\n                                                    <td>{e.name}</td>\r\n                                                    <td>{e.company.name}</td>\r\n                                                    <td>{e.loginID}</td>\r\n                                                    <td className=\"id\">{e._id}</td>\r\n                                                </tr>\r\n                                            )}\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </Container>\r\n                            </Tab>\r\n                            <Tab eventKey=\"companies\" title=\"COMPANIES\">\r\n                                <Container>\r\n                                    <Button className=\"add-new-asset-btn\" onClick={() => {\r\n                                        setActionTarget([\"new-company\"]);\r\n                                        setNewDataModal(true);\r\n                                    }}>Add new company</Button>\r\n                                    <Table striped hover responsive className=\"mt-2\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Company</th>\r\n                                                <th>ID</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {companies.length > 0 && companies.map((e, i) =>\r\n                                                < tr key={i} onClick={(evt) => {\r\n                                                    const id = evt.target.closest(\"tr\").querySelector(\".id\").innerHTML;\r\n                                                    setActionTarget([\"companies\", id]);\r\n                                                    setAskEditModal(true);\r\n                                                }}>\r\n                                                    <td>{e.name}</td>\r\n                                                    <td className=\"id\">{e._id}</td>\r\n                                                </tr>\r\n                                            )}\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </Container>\r\n                            </Tab>\r\n                            <Tab eventKey=\"units\" title=\"UNITS\">\r\n                                <Container>\r\n                                    <Button className=\"add-new-asset-btn\" onClick={() => {\r\n                                        setActionTarget([\"new-unit\"]);\r\n                                        setNewDataModal(true);\r\n                                    }}>Add new unit</Button>\r\n                                    <Table striped hover responsive className=\"mt-2\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Unit</th>\r\n                                                <th>Company</th>\r\n                                                <th>ID</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {units.length > 0 && units.map((e, i) =>\r\n                                                < tr key={i} onClick={(evt) => {\r\n                                                    const id = evt.target.closest(\"tr\").querySelector(\".id\").innerHTML;\r\n                                                    setActionTarget([\"units\", id]);\r\n                                                    setAskEditModal(true);\r\n                                                }}>\r\n                                                    <td>{e.name}</td>\r\n                                                    <td>{e.company.name}</td>\r\n                                                    <td className=\"id\">{e._id}</td>\r\n                                                </tr>\r\n                                            )}\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </Container>\r\n                            </Tab>\r\n                        </Tabs>\r\n                    </Container >\r\n                </Container >\r\n            </>\r\n            : null\r\n        }\r\n            {/* render modals */}\r\n            <AdminAskEdit states={{ askEditModal, setEditionModal, actionTarget, askPassword, clearStates, refreshData }} />\r\n            <AdminEdit states={{ editionModal, actionTarget, askPassword, clearStates, refreshData }} />\r\n            <AdminNewData states={{ newDataModal, actionTarget, askPassword, clearStates, refreshData }} />\r\n            <AdminPass states={{ pwModal, action, clearStates }} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Admin;","function Login() {\r\n\r\n    return (\r\n        <h1>404: Not Found</h1>\r\n    )\r\n}\r\n\r\nexport default Login;","// libraries\r\nimport { useState, useEffect } from \"react\";\r\nimport {\r\n    useLocation,\r\n    BrowserRouter,\r\n    Routes,\r\n    Route,\r\n    Navigate\r\n} from \"react-router-dom\";\r\n\r\n// services\r\nimport api from \"./services/api\"\r\n// pages\r\nimport Login from \"./pages/Login\"\r\nimport Main from \"./pages/Main\"\r\nimport Admin from \"./pages/Admin\"\r\nimport NotFound from \"./pages/NotFound\"\r\n\r\n// styles\r\nimport './global.css';\r\n\r\nconst App = () => {\r\n\r\n    const [auth, setAuth] = useState(false);\r\n\r\n    // verify if user is logged, then redirects accordingly\r\n    function PrivateRoute({ children }) {\r\n\r\n        const location = useLocation();\r\n\r\n        useEffect(() => {\r\n            (async () => {\r\n                try {\r\n                    await api.get(\"/me\");\r\n                    setAuth(true);\r\n                }\r\n                catch (err) {\r\n                    setAuth(false);\r\n                }\r\n            })();\r\n        })\r\n\r\n        return auth ? children : <Navigate to=\"/login\" state={{ from: location }} />;\r\n    }\r\n\r\n    return (\r\n        // admin requires password on every step\r\n        <BrowserRouter basename=\"/tractian-fullstack-challenge\">\r\n            <Routes>\r\n                <Route path=\"/login\" element={<Login />} />\r\n                <Route path=\"/admin\" element={<Admin />} />\r\n                <Route path=\"/\" element={\r\n                    <PrivateRoute>\r\n                        <Main />\r\n                    </PrivateRoute>\r\n                } />\r\n                <Route path=\"*\" element={<NotFound />} />\r\n            </Routes>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n// bootstrap css\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport App from './routes';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App></App>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}